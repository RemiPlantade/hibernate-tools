<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.jboss</groupId>
		<artifactId>jboss-parent</artifactId>
		<version>24</version>
	</parent>

	<groupId>fr.aboucorp</groupId>
	<artifactId>hibernate-tools</artifactId>
	<packaging>jar</packaging>
	<version>6.1.0-SNAPSHOT</version>

	<organization>
		<name>Aboucorp</name>
		<url>http://www.aboucipu.fr</url>
	</organization>

	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://www.gnu.org/licenses/lgpl-2.1.html</url>
		</license>
	</licenses>

	<properties>
		<hibernateversion>5.2.11.Final</hibernateversion>
		<hibernateJpaversion>1.0.0.Final</hibernateJpaversion>
		<hibernateCommonsAnnotationsVersion>5.0.0.Final</hibernateCommonsAnnotationsVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Default settings for Database connection; to be overridden in db specific 
			profiles -->
		<jdbc.driver.groupId>org.hsqldb</jdbc.driver.groupId>
		<jdbc.driver.artifactId>hsqldb</jdbc.driver.artifactId>
		<jdbc.driver.jdbc.driver.version>2.3.3</jdbc.driver.jdbc.driver.version>
		<!-- End of settings for Database connection -->
	</properties>

	<!-- Graphviz should be installed for junit tests and it's bin dir should 
		be in classpath -->
	<!-- TODO: is it possible to automate this with maven? -->

	<dependencies>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernateversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate.common</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>${hibernateCommonsAnnotationsVersion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>${hibernateJpaversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant</artifactId>
			<version>1.10.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant-launcher</artifactId>
			<version>1.10.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.23</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.23</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jdt</groupId>
			<artifactId>org.eclipse.jdt.core</artifactId>
			<version>3.12.2</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
			<version>1.1.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>${jdbc.driver.groupId}</groupId>
			<artifactId>${jdbc.driver.artifactId}</artifactId>
			<version>${jdbc.driver.jdbc.driver.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.23</version>
		</dependency>
	</dependencies>

	<!-- <build> <defaultGoal>install</defaultGoal> <sourceDirectory>./src/java</sourceDirectory> 
		<testSourceDirectory>./src/test</testSourceDirectory> <resources> <resource> 
		<directory>src/templates</directory> </resource> <resource> <directory>src/java</directory> 
		<includes> <include>org/hibernate/*.dtd</include> <include>org/hibernate/**/*.properties</include> 
		</includes> </resource> </resources> <testResources> <testResource> <filtering>true</filtering> 
		<directory>src/testresources</directory> <includes> <include>**/*.properties</include> 
		</includes> </testResource> </testResources> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> 
		<artifactId>maven-surefire-plugin</artifactId> <configuration> <excludes> 
		Tests that don't apply for HSQLDB <exclude>org/hibernate/tool/test/jdbc2cfg/OracleCompositeIdOrderTest.java</exclude> 
		<exclude>org/hibernate/tool/test/jdbc2cfg/OracleViewsTest.java</exclude> 
		<exclude>org/hibernate/tool/test/jdbc2cfg/identity/H2IdentityTest.java</exclude> 
		<exclude>org/hibernate/tool/test/jdbc2cfg/identity/HSQLIdentityTest.java</exclude> 
		<exclude>org/hibernate/tool/test/jdbc2cfg/identity/MySQLIdentityTest.java</exclude> 
		<exclude>org/hibernate/tool/test/jdbc2cfg/identity/SQLServerIdentityTest.java</exclude> 
		HSQLDB 1.8.0.2 does not support multiple schemas <exclude>org/hibernate/tool/test/jdbc2cfg/TernarySchemaTest.java</exclude> 
		</excludes> <includes> <include>**/*Test.java</include> </includes> </configuration> 
		</plugin> <plugin> <artifactId>maven-clean-plugin</artifactId> <configuration> 
		<filesets> <fileset> <directory>testdb</directory> </fileset> <fileset> <directory>test_output</directory> 
		</fileset> <fileset> <directory>toolstestoutput</directory> </fileset> </filesets> 
		</configuration> </plugin> <plugin> <groupId>org.codehaus.mojo</groupId> 
		<artifactId>properties-maven-plugin</artifactId> <version>1.0-alpha-2</version> 
		<executions> <execution> <phase>generate-resources</phase> <goals> <goal>write-active-profile-properties</goal> 
		</goals> <configuration> <outputFile> ${project.build.directory}/test-classes/hibernate.properties 
		</outputFile> </configuration> </execution> </executions> </plugin> <plugin> 
		<groupId>org.apache.maven.plugins</groupId> <artifactId>maven-antrun-plugin</artifactId> 
		<executions> <execution> <phase>process-resources</phase> <goals> <goal>run</goal> 
		</goals> <configuration> <tasks> <echo></echo> <copy file="${project.build.directory}/test-classes/hibernate.properties" 
		tofile="${project.build.directory}/test-classes/log4j.properties" /> </tasks> 
		</configuration> </execution> </executions> </plugin> <plugin> <groupId>org.codehaus.mojo</groupId> 
		<artifactId>build-helper-maven-plugin</artifactId> <executions> <execution> 
		<id>add-test-source</id> <phase>generate-sources</phase> <goals> <goal>add-test-source</goal> 
		</goals> <configuration> <sources> <source>./src/testsupport</source> </sources> 
		</configuration> </execution> <execution> <id>add-test-resource</id> <phase>generate-resources</phase> 
		<goals> <goal>add-test-resource</goal> </goals> <configuration> <resources> 
		<resource> <directory>./src/test</directory> <includes> <include>**/*.xml</include> 
		</includes> </resource> <resource> <directory>./src/testoutputdependent</directory> 
		</resource> <resource> <directory>./src/testsupport</directory> </resource> 
		</resources> </configuration> </execution> </executions> </plugin> <plugin> 
		<groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jar-plugin</artifactId> 
		<configuration> <archive> <manifestEntries> <Implementation-Title>${project.name}</Implementation-Title> 
		<Implementation-version>${project.version}</Implementation-version> <Implementation-Vendor>hibernate.org</Implementation-Vendor> 
		<Implementation-Vendor-Id>hibernate.org </Implementation-Vendor-Id> <Implementation-URL>http://www.hibernate.org/subprojects/tools.html 
		</Implementation-URL> </manifestEntries> </archive> </configuration> </plugin> 
		<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> 
		<configuration> <stylesheetfile>${basedir}/src/javadoc/jdstyle.css</stylesheetfile> 
		</configuration> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> 
		<artifactId>maven-assembly-plugin</artifactId> <configuration> <descriptors> 
		<descriptor>./src/assembly/dist.xml</descriptor> </descriptors> </configuration> 
		</plugin> </plugins> <pluginManagement> <plugins> TODO TEXT. This plugin's 
		configuration is used in m2e only. <plugin> <groupId>org.eclipse.m2e</groupId> 
		<artifactId>lifecycle-mapping</artifactId> <version>1.0.0</version> <configuration> 
		<lifecycleMappingMetadata> <pluginExecutions> <pluginExecution> <pluginExecutionFilter> 
		<groupId> org.apache.maven.plugins </groupId> <artifactId> maven-antrun-plugin 
		</artifactId> <versionRange> [1.4,) </versionRange> <goals> <goal>run</goal> 
		</goals> </pluginExecutionFilter> <action> <ignore></ignore> </action> </pluginExecution> 
		<pluginExecution> <pluginExecutionFilter> <groupId> org.codehaus.mojo </groupId> 
		<artifactId> build-helper-maven-plugin </artifactId> <versionRange> [1.5,) 
		</versionRange> <goals> <goal> add-test-resource </goal> </goals> </pluginExecutionFilter> 
		<action> <ignore></ignore> </action> </pluginExecution> <pluginExecution> 
		<pluginExecutionFilter> <groupId> org.codehaus.mojo </groupId> <artifactId> 
		properties-maven-plugin </artifactId> <versionRange> [1.0-alpha-2,) </versionRange> 
		<goals> <goal> write-active-profile-properties </goal> </goals> </pluginExecutionFilter> 
		<action> <ignore></ignore> </action> </pluginExecution> </pluginExecutions> 
		</lifecycleMappingMetadata> </configuration> </plugin> </plugins> </pluginManagement> 
		</build> -->
	<repositories>
		<repository>
			<id>global</id>
			<url>http://maven.aboucipu.fr/repository/global</url>
		</repository>
	</repositories>

	<distributionManagement>
		<repository>
			<id>global</id>
			<name>Global Repository</name>
			<url>http://maven.aboucipu.fr/repository/global</url>
		</repository>
	</distributionManagement>

</project>
